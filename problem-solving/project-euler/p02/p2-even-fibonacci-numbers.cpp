/*
 * Project Euler - Problem 2 : Even Fibonacci Numbers.
 *
 * Each new term in the Fibonnaci sequence is generated by adding the previous two terms.
 * By starting with 1 and 2, the first 10 will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *
 * By considering the terms in the Fibonnaci sequence whose values do not 
 * exceed four million find the sum of the even-valued numbers.
*/

#include <iostream>

/*
 * Thanks to the problem's description we know how the Fibonnaci sequence works so
 * that is something we don't need to care about because it is already done.
 *
 * We need to care about how do we know in code when a number is even.
 * With the module " % " operator, if the operation with an even number, in this case 2,
 * left a remainder then the number is not even.
*/

// To avoid magic numbers
const double MAX_LENGTH = 4000000;
const int EVEN = 2;

int main(){
	// Fibonacci sequence
	int sum = 0;
	int x = 0;
	int y = 1;
	int z = 0;
	for(int i = 0; i < MAX_LENGTH; i++){
		z = x + y;
		x = y;
		y = z;
		
		// Check even numbers
		if(z < MAX_LENGTH){
			if(z%EVEN == 0){	
				Sum += z;
			}
		}else{
			break;
		}
	}
	
	std::cout << "The sum is : " << Sum << std::endl;

	return 0;
}
